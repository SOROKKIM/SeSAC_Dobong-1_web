/* 
    1. 기본
    - nesting
    - 자기자신 선택 &
    - 변수 사용
*/
// 이 주석도 가능

// 1. 변수 사용
$color-blue: blue;
$boxShadow: 2px 2px 6px rgba(0, 0, 0, 0.7);

// _utils.scss(부분파일)에서 변수 선언한거 사용하려면 import 필요
@import "utils";

.div1 {
  width: 100px;
  height: 100px;
  background-color: $color-red;
  .div2 {
    width: 50%;
    height: 50%;
    background-color: $color-orange;
    box-shadow: inset $boxShadow;
    .div3 {
      background-color: $color-yellow;
      width: 50%;
      height: 50%;
      box-shadow: $boxShadow;
    }
  }
  .btn {
    display: inline-block;
    transition: $animation-duration;
    font-size: 8px;
    width: 33%;
    height: 40px;
    padding: 0;
    color: white;

    // .btn.orangered
    &.orangered {
      background-color: orangered;
    }

    // .btn-opacity
    &--opacity {
      background-color: $color-blue;
      opacity: 0.5;
      &:hover {
        opacity: 0.2;
      }
    }

    // .btn--blue
    &--blue {
      background-color: $color-blue;
    }
  }
}

.container {
  width: 100%;
  background-color: gainsboro;
  margin-bottom: 120px;
  .box1 {
    @include box;
    // &:nth-child(1) {
    //   width: 100px;
    // }
    // &:nth-child(2) {
    //   width: 120px;
    // }
    // &:nth-child(3) {
    //   width: 140px;
    // }

    @for $i from 1 through 3 {
      &:nth-child(#{$i}) {
        width: 80px + 20px * $i;
      }
    }
  }

  .circle {
    // @include circle($color-red, 0.8);
    $circleBgColors: ($color-orange, $color-yellow, $color-green);

    // &:nth-of-type(1) {
    //   @include circle($color-red, 0.8);
    // }
    // &:nth-of-type(2) {
    // }
    // &:nth-of-type(3) {
    // }
    @each $el in $circleBgColors {
      $index: index($circleBgColors, $el);
      // index 내장메서드 배열에 대한 인덱스를 뽑아줌 index($리스트, $리스트의 value)
      // 반환값 리스트의 value에 대한 index:1,2,3,...
      &:nth-of-type(#{$index}) {
        @include circle($el, 0.7);
      }
    }
  }

  .box2 {
    @include box2();
    &:nth-of-type(4) {
      @include box2($color-yellow, 20px, navy);
    }

    &:nth-of-type(5) {
      @include box2($color-orange, 30px, black);
    }
  }
}

// 이미지 가지고 오는 법, 접근하기
.img-test {
  width: 100px;
  height: 100px;
  border: 1px solid blue;
  &.src-img {
    // background-image 속성은 상대경로 사용
    background-image: url("../assets/사과.jpeg");
  }

  &.public-img {
    // 상대경로가 아닌 public은 /로부터 접근
    // background-image: url("/assets/apple.jpeg");
  }
}

.practice {
  //   .photo {
  //     width: 130px;
  //     height: 200px;
  //     border-radius: 20px;
  //     box-shadow: $boxShadow;
  //     background-color: cornflowerblue;
  //     display: inline-block;
  //     @for $i from 1 through 4 {
  //       &:nth-child(#{$i}) {
  //         background-image: url("../assets/practice#{$i}.png");
  //       }
  //     }
  //   }
  display: flex;
  justify-content: space-evenly;
  > div {
    width: 100px;
    height: 150px;
    background-color: cornflowerblue;
    margin: 50px 0;
    border-radius: 10%;
    cursor: pointer;
    box-shadow: $boxShadow;

    // &:nth-child(1) {
    //   background-image: url("/assets/practice1.png");
    //   background-size: contain;
    //   background-repeat: no-repeat;
    //   background-position: center;
    // }
    // &:nth-child(2) {
    // }
    // &:nth-child(3) {
    // }
    // &:nth-child(4) {
    // }
    @for $i from 1 through 4 {
      &:nth-child(#{$i}) {
        background-image: url("/assets/practice#{$i}.png");
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
      }
    }
  }
}
